function obj = resizeData(obj)

    obj.masking.rmin = obj.masking.rmin*obj.binFactor;
    obj.masking.rmax = obj.masking.rmax*obj.binFactor;

    obj.SCATT = imresize(obj.SCATT, obj.binFactor, obj.binMethod)/obj.binFactor^2;
%     % self written method so be sure that binning works correct
%     obj.SCATT = imgBinning(obj.SCATT, obj.binFactor);

    obj.SCATT = (single(obj.SCATT));
    obj.support0 = (single(obj.support0));
    obj.rho0 = (single(obj.rho0));

    obj.SCATT(obj.SCATT<obj.masking.minPhotons) = 0;
    obj.SCATT(obj.SCATT>obj.masking.maxPhotons) = nan;

    obj.imgsize = size(obj.SCATT);
    obj.center = obj.imgsize/2+1;

    obj.support0 = obj.support0( ...
        colon( ...
            1+size(obj.support0,1)/2-size(obj.SCATT,1)/2 , ...
            size(obj.support0,1)/2+size(obj.SCATT,1)/2 ...
        ), ...
        colon( ...
            1+size(obj.support0,2)/2-size(obj.SCATT,2)/2 , ...
            size(obj.support0,2)/2+size(obj.SCATT,2)/2 ...
        ) ...
    );
    obj.rho0 = obj.rho0( ...
        colon( ...
            1+size(obj.rho0,1)/2-obj.imgsize(1)/2 , ...
            size(obj.rho0,1)/2+obj.imgsize(1)/2 ...
        ), ...
        colon( ...
            1+size(obj.rho0,2)/2-obj.imgsize(2)/2 , ...
            size(obj.rho0,2)/2+obj.imgsize(2)/2 ...
        ) ...
    );

    if obj.support_dilate
        obj.support0 = ( 0 < imdilate(...
            obj.support0>0, strel(obj.support_dilateMethod, double(obj.support_dilateFactor))...
            ) );
    end
    obj.support = obj.support0;

end
