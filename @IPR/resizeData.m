function obj = resizeData(obj)

    obj.masking.rmin = obj.masking.rmin*obj.binFactor;
    obj.masking.rmax = obj.masking.rmax*obj.binFactor;

    obj.SCATT = imresize(obj.SCATT, obj.binFactor, obj.binMethod)/obj.binFactor^2;
%     % self written method so be sure that binning works correct
%     obj.SCATT = imgBinning(obj.SCATT, obj.binFactor);

    obj.SCATT = gpuArray(single(obj.SCATT));
    obj.support0 = gpuArray(single(obj.support0));
    obj.rho0 = gpuArray(single(obj.rho0));

    obj.SCATT(obj.SCATT<obj.masking.minPhotons) = 0;
    obj.SCATT(obj.SCATT>obj.masking.maxPhotons) = nan;

    obj.imgsize = size(obj.SCATT);
    obj.center = obj.imgsize/2+1;
    
%     if isempty(obj.center)
%         obj.center = obj.imgsize/2+1;
%     end
%     if obj.masking.constraint_gapMask
%         obj.SCATT( ( obj.center(1)-round(obj.masking.gapSize*obj.binFactor/2) ) : ...
%             ( obj.center(1)+round(obj.masking.gapSize*obj.binFactor/2)-1 ) , :) = nan;
%     end

    obj.support0 = obj.support0( ...
        gpuArray.colon( ...
            1+size(obj.support0,1)/2-size(obj.SCATT,1)/2 , ...
            size(obj.support0,1)/2+size(obj.SCATT,1)/2 ...
        ), ...
        gpuArray.colon( ...
            1+size(obj.support0,2)/2-size(obj.SCATT,2)/2 , ...
            size(obj.support0,2)/2+size(obj.SCATT,2)/2 ...
        ) ...
    );
    obj.rho0 = obj.rho0( ...
        gpuArray.colon( ...
            1+size(obj.rho0,1)/2-size(obj.SCATT,1)/2 , ...
            size(obj.rho0,1)/2+size(obj.SCATT,1)/2 ...
        ), ...
        gpuArray.colon( ...
            1+size(obj.rho0,2)/2-size(obj.SCATT,2)/2 , ...
            size(obj.rho0,2)/2+size(obj.SCATT,2)/2 ...
        ) ...
    );

    %    round(1+ obj.imgsize(2)-obj.imgsize(2)*obj.binFactor : obj.imgsize(2)+obj.imgsize(2)*obj.binFactor));
    %obj.support0 = single(obj.support0);
    %obj.rho0 = obj.rho0(round(1+ obj.imgsize(1)-obj.imgsize(1)*obj.binFactor : obj.imgsize(1)+obj.imgsize(1)*obj.binFactor),...
    %    round(1+ obj.imgsize(2)-obj.imgsize(2)*obj.binFactor : obj.imgsize(2)+obj.imgsize(2)*obj.binFactor));
    %
    %obj.support0 = imcrop(obj.support0, [ 1+size(obj.support0)/2 - obj.imgsize/2 , obj.imgsize-1 ] );
    % obj.rho0 = imcrop(obj.rho0, [ 1+size(obj.rho0)/2 - obj.imgsize/2 , obj.imgsize-1 ] );

    if obj.support_dilate
        obj.support0 = ( 0 < imdilate(...
            obj.support0>0, strel(obj.support_dilateMethod, double(obj.support_dilateFactor))...
            ) );
    end
    obj.support = obj.support0;

end
